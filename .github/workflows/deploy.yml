# This workflow will build a Java project with and deploys it to the github repository

name: Deploy new version

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
#    - name: Setup settings.xml 
#      uses: s4u/maven-settings-action@v3.0.0
#      with:
#        githubServer: false
#        servers: |
#           [{
#              "id": "github",
#              "username": "${{ github.actor }}",
#              "password": "${{ secrets.MAVEN_REPO_WRITE }}"
#           }]
#    - name: echo settings
#      run:  cat /home/runner/.m2/settings.xml
    - name: mvn build
      run: mvn -B-q clean verify
    - name: Deploy and Tag
      env: 
        GITHUB_TOKEN: ${{ secrets.MAVEN_REPO_WRITE}} # GITHUB_TOKEN is the default env for the password of the github server in settings.xml
      run: |
        #set version in pom.xml
        version=$(mvn exec:exec -Dexec.executable=echo -Dexec.args='${project.version}' --quiet | sed 's/\.[^.]*$//')
        date=$(date '+%Y%m%d')
        buildnr=${{github.run_number}}
        newversion="$version.$date$buildnr"
        echo "Setting version to $newversion"
        mvn versions:set -DnewVersion="$newversion"
        #deploy to a maven repo.
        mvn deploy
        #set git tag
        remote=$(git remote)
        git tag "$newversion"
        git push "$remote" "$newversion"
        #reset version in pom.xml
        mvn versions:revert

